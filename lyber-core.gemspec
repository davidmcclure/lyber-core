# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{lyber-core}
  s.version = "0.5.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Willy Mene"]
  s.date = %q{2010-03-16}
  s.description = %q{Contains classes to make http connections with a client-cert, use Jhove, and call Suri
Also contains core classes to build robots}
  s.email = %q{wmene@stanford.edu}
  s.extra_rdoc_files = [
    "LICENSE",
     "README.rdoc"
  ]
  s.files = [
    ".document",
     ".gitignore",
     "LICENSE",
     "README.rdoc",
     "Rakefile",
     "VERSION",
     "lib/connection.rb",
     "lib/dor/suri_service.rb",
     "lib/dor/workflow_service.rb",
     "spec/certs/dummy.crt",
     "spec/certs/dummy.key",
     "spec/connection_spec.rb",
     "spec/dor/suri_service_spec.rb",
     "spec/dor/workflow_servce_spec.rb",
     "spec/spec.opts",
     "spec/spec_helper.rb"
  ]
  s.homepage = %q{http://github.com/wmene/lyber-core}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.5}
  s.summary = %q{Core services used by the SULAIR Digital Library}
  s.test_files = [
    "spec/connection_spec.rb",
     "spec/dor/suri_service_spec.rb",
     "spec/dor/workflow_servce_spec.rb",
     "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<active-fedora>, [">= 1.0.7"])
      s.add_development_dependency(%q<rspec>, [">= 1.2.9"])
    else
      s.add_dependency(%q<active-fedora>, [">= 1.0.7"])
      s.add_dependency(%q<rspec>, [">= 1.2.9"])
    end
  else
    s.add_dependency(%q<active-fedora>, [">= 1.0.7"])
    s.add_dependency(%q<rspec>, [">= 1.2.9"])
  end
end

